// Generated by https://quicktype.io

export interface ScheduleData {
  data: Data;
}

export interface Data {
  schedule: Schedule;
}

export interface Schedule {
  pages: Pages;
  events: Event[];
}

export interface Event {
  startTime: Date;
  state: State;
  type: EventType;
  blockName: BlockName;
  league: League;
  match?: Match;
}

export enum BlockName {
  The4강 = '4강',
  The8강 = '8강',
  결승 = '결승',
  스위스 = '스위스',
  플레이인 = '플레이-인'
}

export interface League {
  name: Name;
  slug: Slug;
}

export enum Name {
  월드챔피언십 = '월드 챔피언십'
}

export enum Slug {
  Worlds = 'worlds'
}

export interface Match {
  id: string;
  flags: Flag[];
  teams: Team[];
  strategy: Strategy;
}

export enum Flag {
  HasVOD = 'hasVod',
  IsSpoiler = 'isSpoiler'
}

export interface Strategy {
  type: StrategyType;
  count: number;
}

export enum StrategyType {
  BestOf = 'bestOf'
}

export interface Team {
  name: string;
  code: string;
  image: string;
  result: Result | null;
  record: Record | null;
}

export interface Record {
  wins: number;
  losses: number;
}

export interface Result {
  outcome: Outcome | null;
  gameWins: number;
}

export enum Outcome {
  Loss = 'loss',
  Win = 'win'
}

export enum State {
  Completed = 'completed',
  Unstarted = 'unstarted'
}

export enum EventType {
  Match = 'match'
}

export interface Pages {
  older: string;
  newer: string | null;
}
